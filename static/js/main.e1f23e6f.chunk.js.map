{"version":3,"sources":["components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","components/Section/Section.styles.jsx","components/Section/Main.jsx","components/Section/Section.jsx","components/Container/Container.styles.jsx","components/Container/Container.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Notification/Notification.styles.jsx","components/Notification/Notification.jsx","App.jsx","index.js"],"names":["List","styled","ul","Item","li","Statistics","good","bad","neutral","total","positivePercentage","size","color","Wrapper","section","Title","h2","Section","main","Main","children","title","div","Container","Options","Button","button","FeedbackOptions","onChangeStatistics","onClick","name","Message","p","Icon","Notification","message","icon","App","state","handleChangeStatistics","e","setState","prev","target","countTotalFeedback","this","Math","round","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1f23e6f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nfont-size: 20px;\ncolor: #727273;\nalign-items: center;\njustify-content: center;\n`;\nexport const Item = styled.li`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\n\nheight: 30px;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  & svg {\n      margin-left: 10px;\n  }\n`;","import PropTypes from 'prop-types';\nimport { List, Item } from './Statistics.styles';\nimport { RiEmotionHappyLine, RiEmotionNormalLine, RiEmotionUnhappyLine } from \"react-icons/ri\";\nimport {IoIosStats} from \"react-icons/io\";\nimport { FaBalanceScale } from \"react-icons/fa\";\n\nconst Statistics = ({ good, bad, neutral, total, positivePercentage }) => (\n<List>\n        <Item>\n                Good:{good}\n                <RiEmotionHappyLine size=\"25\" color=\"#00FF00\"/>\n        </Item>\n        <Item>\n                Neutral:{neutral}\n                <RiEmotionNormalLine size=\"25\" color=\"#FFD700\" />\n        </Item>\n        <Item>\n                Bad:{bad}\n                <RiEmotionUnhappyLine size=\"25\" color=\"#ff0000\" />\n        </Item>\n        <Item>\n                Total:{total}\n                <IoIosStats size=\"25\" color=\"#32CD32\" />\n        </Item>\n        <Item>\n                Positive feedback:{positivePercentage}%\n                <FaBalanceScale size=\"25\" color=\"#B8860B\" />\n        </Item>\n</List>\n)\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.section`\npadding: 30px 0;\nwidth: 470px;\n`;\n\nexport const Title = styled.h2`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nmargin-top: 30px;\nmargin-bottom: 100px;\nmargin-left: auto;\nmargin-right: auto;\ntext-transform: uppercase;\nfont-size: 32px;\ntext-align: center;\ncolor: #727273;\n& svg {\nmargin-left: 15px;\n}\n`;\n\nexport const Section = styled.main`\ndisplay: flex;\njustify-content: space-around;\nwidth: 1200px;\nborder-radius: 10px;\nborder: 1px solid #f0f0f3;\nmargin: 50px auto 0;\nbackground-color: #f0f0f3;\nbox-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\n`;","import PropTypes from 'prop-types';\nimport { Section } from './Section.styles'\n\nconst Main = ({ children }) => {\n    return (\n        <Section>\n            {children}\n        </Section>\n    )\n\n}\n\nMain.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Main;","import PropTypes from 'prop-types';\nimport { Wrapper, Title } from './Section.styles';\nimport { VscFeedback, VscGraph } from \"react-icons/vsc\";\n\nconst Section = ({ children, title }) => {\n    return (\n        <Wrapper>\n            {title && (\n                <Title>\n                    {title}\n                    {title === \"Please leave feedback\" && <VscFeedback size=\"35\"/>}\n                    {title === \"Statistics\" && <VscGraph size=\"35\" /> }\n                </Title>\n            )}\n\n            {children}\n        </Wrapper>\n    );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0 30px;\n`;","import PropTypes from \"prop-types\";\nimport { Wrapper } from \"./Container.styles\";\n\nconst Container = ({ children }) => {\n  return <Wrapper>{children}</Wrapper>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;","import styled from \"@emotion/styled\";\n\nexport const Options = styled.div`\ndisplay: flex;\njustify-content: space-around;\n`;\n\nexport const Button = styled.button`\nwidth: 100px;\npadding: 5px 10px;\ndisplay: flex;\ncolor: #727273;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nborder: 1px solid #f0f0f3;\nborder-radius: 10px;\ncursor: pointer;\noutline: none;\n/* text-transform: capitalize; */\nfont-size: 18px;\nfont-weight: 500;\nbackground-color: transparent;\nbox-shadow: -10px -10px 30px 0 #ffffff, 10px 10px 30px 0 #aeaec040;\ntransition: all 250ms ease-in-out;\n&:hover,\n&:focus-visible {\ntransform: scale(1.2);\n}\n`;","import PropTypes from 'prop-types';\nimport { Options, Button } from './FeedbackOptions.styles';\nimport { RiEmotionHappyLine, RiEmotionNormalLine, RiEmotionUnhappyLine } from \"react-icons/ri\";\n\nconst FeedbackOptions = ({onChangeStatistics}) => (\n    <Options>\n        <Button\n            onClick={onChangeStatistics}\n            name=\"good\">\n            <RiEmotionHappyLine size=\"30\" color=\"#00FF00\"/>\n            good\n        </Button>\n        <Button\n            onClick={onChangeStatistics}\n            name=\"neutral\">\n            <RiEmotionNormalLine size=\"30\" color=\"#FFD700\" />\n            neutral\n        </Button>\n        <Button\n            onClick={onChangeStatistics}\n            name=\"bad\">\n            <RiEmotionUnhappyLine size=\"30\" color=\"#ff0000\" />\n            bad\n        </Button>\n    </Options>\n)\n\nFeedbackOptions.propTypes = {\n    onChangeStatistics: PropTypes.func.isRequired,\n}\n\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\n\nexport const Message = styled.p`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\ntext-align: center;\nfont-size: 25px;\nfont-weight: 500;\ncolor: #727273;\n`;\n\nexport const Icon = styled.p`\nfont-size: 35px;\nmargin-bottom: 12px;\n`;","import PropTypes from 'prop-types';\nimport {Message, Icon} from './Notification.styles'\n\nconst Notification = ({ message, icon=\"ðŸ¤·\" }) => {\n  return <Message>\n            {message}   ...\n            <Icon>\n              {icon}\n            </Icon>\n          </Message>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired,\n}\n\nexport default Notification;","import './App.css';\nimport Statistics from './components/Statistics/Statistics';\nimport Main from './components/Section/Main';\nimport Section from './components/Section/Section';\nimport Container from './components/Container/Container';\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions';\nimport Notification from './components/Notification/Notification';\nimport { Component } from 'react';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    bad: 0,\n    neutral: 0\n  }\n\n  handleChangeStatistics = (e) => {\n    this.setState(prev => {\n      return {\n        [e.target.name]: prev[e.target.name] + 1\n      }\n    })\n  }\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage() {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n\n    return total !== 0\n      ? Math.round((good * 100) / total)\n    : 0;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state\n    return (\n      <Main>\n        <Section title=\"Please leave feedback\">\n          <Container>\n            <FeedbackOptions\n            onChangeStatistics={this.handleChangeStatistics}\n          />\n          </Container>\n        </Section>\n          \n        <Section title=\"Statistics\">\n          <Container>\n            {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={good}\n              bad={bad}\n              neutral={neutral}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n            ) : (\n            <Notification message=\"No feedback given\" />\n            )}\n          </Container>          \n        </Section>     \n      </Main>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}